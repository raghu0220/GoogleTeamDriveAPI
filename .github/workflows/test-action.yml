name: build mule project
on: workflow_dispatch
branches: [dev, sit uat, ]
jobs:
  build-code:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      
      
      - name: Cache dependencies
        uses: actions/cache@v3
        
      #- name: install OpenJDK 17
      #  run: |
      #      sudo apt-get update && sudo apt-get install openjdk-17-jdk
      #      sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
      #      sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
      #      java -version
      #      echo "installed latest java version"
                  
      
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: getversion
      
      - name: Extract Maven project version
        run: echo ::set-output name=artifactId::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)
        id: getartifactId

      
      - name: Deploy to dev
        env:
            UNAME: ${{ secrets.TEST_UNAME }}
            UPASS: ${{ secrets.TEST_UPASS }}
            GITHUB_BRANCH: ${{ github.ref_name }}
            APPLICATION_NAME: ${{ steps.getartifactId.outputs.artifactId }}
        if: ('${GITHUB_BRANCH}' == 'dev')
        run: |
            echo "uname = ${UNAME} deploying to ${GITHUB_BRANCH}"
            echo "upass = ${UPASS} deploying to ${GITHUB_BRANCH}"
            echo "Branch = ${GITHUB_BRANCH} deploying to ${GITHUB_BRANCH}"
            echo "APP_Name = ${APPLICATION_NAME} deploying to ${GITHUB_BRANCH}"
            echo "APP_version = ${APPLICATION_VERSION} deploying to ${GITHUB_BRANCH}"
      
      - name: Deploy to sit
        env:
            UNAME: ${{ secrets.TEST_UNAME }}
            UPASS: ${{ secrets.TEST_UPASS }}
            GITHUB_BRANCH: ${{ github.ref_name }}
            APPLICATION_NAME: ${{ steps.getartifactId.outputs.artifactId }}
            APPLICATION_VERSION: ${{ steps.getversion.outputs.version }}
        if: ('${GITHUB_BRANCH}' == 'sit')
        run: |
            echo "uname = ${UNAME} deploying to ${GITHUB_BRANCH}"
            echo "upass = ${UPASS} deploying to ${GITHUB_BRANCH}"
            echo "Branch = ${GITHUB_BRANCH} deploying to ${GITHUB_BRANCH}"
            echo "APP_Name = ${APPLICATION_NAME} deploying to ${GITHUB_BRANCH}"
            echo "APP_version = ${APPLICATION_VERSION} deploying to ${GITHUB_BRANCH}"
            
      - name: Deploy to uat
        env:
            UNAME: ${{ secrets.TEST_UNAME }}
            UPASS: ${{ secrets.TEST_UPASS }}
            GITHUB_BRANCH: ${{ github.ref_name }}
            APPLICATION_NAME: ${{ steps.getartifactId.outputs.artifactId }}
            APPLICATION_VERSION: ${{ steps.getversion.outputs.version }}
        if: ('${GITHUB_BRANCH}' == 'uat')
        run: |
            echo "uname = ${UNAME} deploying to ${GITHUB_BRANCH}"
            echo "upass = ${UPASS} deploying to ${GITHUB_BRANCH}"
            echo "Branch = ${GITHUB_BRANCH} deploying to ${GITHUB_BRANCH}"
            echo "APP_Name = ${APPLICATION_NAME} deploying to ${GITHUB_BRANCH}"
            echo "APP_version = ${APPLICATION_VERSION} deploying to ${GITHUB_BRANCH}"
